scala> val productRDD =sc.textFile("/edudata/product_click.log")

scala> val IdCandidateRDD = productRDD.flatMap(_.split("[ ]"))

scala> val IdRDD = IdCandidateRDD.filter(line=>line.contains("p"))

scala> val IdAndOnePairRDD =IdRDD.map((_,1))

scala> val IdAndCountRDD = IdAndOnePairRDD.reduceByKey(_+_)

scala> val IdAndCountArray = IdAndCountRDD.collect
IdAndCountArray: Array[(String, Int)] = Array((p012,39), (p001,84), (p005,43), (p004,50), (p003,54), (p006,51), (p011,49), (p013,4), (p007,71), (p009,80), (p014,10), (p008,80), (p010,58), (p015,7), (p002,66))

scala> IdAndCountArray.foreach(println)

>>
(p012,39)
(p001,84)
(p005,43)
(p004,50)
(p003,54)
(p006,51)
(p011,49)
(p013,4)
(p007,71)
(p009,80)
(p014,10)
(p008,80)
(p010,58)
(p015,7)
(p002,66)



scala> val countAndIdRDD = IdAndCountRDD.map{IdAndCount =>
     | (IdAndCount._2,IdAndCount._1)
     | }

scala> val sortedCIRDD = countAndIdRDD.sortByKey(false)

scala> val sortedICArray=sortedCIRDD.collect

scala> sortedICArray.foreach(println)

>>
(84,p001)
(80,p009)
(80,p008)
(71,p007)
(66,p002)
(58,p010)
(54,p003)
(51,p006)
(50,p004)
(49,p011)
(43,p005)
(39,p012)
(10,p014)
(7,p015)
(4,p013)

